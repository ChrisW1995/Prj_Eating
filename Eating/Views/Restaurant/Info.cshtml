@model Eating.ViewModels.RestaurantInfoViewModel
@{
    ViewBag.Title = "Info";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

<section class="col-lg-6 connectedSortable ui-sortable">
    <div class="box box-info" style="position: relative; left: 0px; top: 0px;">
        <div class="box-header ui-sortable-handle" style="">
            <i class="fa fa-info"></i>

            <h3 class="box-title"><b>帳號管理</b></h3>
        </div>
        <div class="box-body">
          @using (Html.BeginForm("SaveAccount", "Restaurant"))
          {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.R_Account, htmlAttributes: new { @class = "control-label col-md-3 col-md-offset-1" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(model => model.R_Account, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.R_Password, htmlAttributes: new { @class = "control-label col-md-3 col-md-offset-1" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(model => model.R_Password, new { @class = "form-control", @type = "password" })
                        @Html.ValidationMessageFor(model => model.R_Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.new_R_Password, htmlAttributes: new { @class = "control-label col-md-3 col-md-offset-1" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(model => model.new_R_Password, new { @class = "form-control", @type = "password" })
                        @Html.ValidationMessageFor(model => model.new_R_Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.check_new_R_Password, htmlAttributes: new { @class = "control-label col-md-3 col-md-offset-1" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(model => model.check_new_R_Password, new { @class = "form-control", @type = "password" })
                        @Html.ValidationMessageFor(model => model.check_new_R_Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-4 col-md-8">
                        <input id="save" type="submit" value="確認修改" class="btn btn-default" />
                    </div>
                </div>
            </div>

            <div class="col-md-6 col-md-offset-3" style="font-weight:800; color:@TempData["classColor"];">@TempData["Message"]</div><br />
          }
        </div>
        <div class="box-footer clearfix">

        </div>
    </div>
</section>

<section class="col-lg-6 connectedSortable ui-sortable">
    <div class="box box-primary" style="position: relative; left: 0px; top: 0px;">
        <div class="box-header ui-sortable-handle" style="">
            <i class="fa fa-info"></i>

            <h3 class="box-title"><b>資訊管理</b></h3>
        </div>

        <div class="box-body">
            @using (Html.BeginForm("SaveInfo", "Restaurant"))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.R_Name, htmlAttributes: new { @class = "control-label col-md-3 col-md-offset-1" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(model => model.R_Name, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.R_Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.R_PhoneNum, htmlAttributes: new { @class = "control-label col-md-3 col-md-offset-1" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(model => model.R_PhoneNum, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.R_PhoneNum, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3 col-md-offset-1" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.R_DetailAddress, htmlAttributes: new { @class = "control-label col-md-3 col-md-offset-1" })
                        <div class="col-md-2">
                            @Html.TextBoxFor(model => model.R_County, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.R_County, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            @Html.TextBoxFor(model => model.R_Area, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.R_Area, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-4 col-md-offset-4">
                            @Html.TextBoxFor(model => model.R_DetailAddress, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.R_DetailAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-3 col-md-offset-1" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(model => model.StartTime, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CloseTime, htmlAttributes: new { @class = "control-label col-md-3 col-md-offset-1" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(model => model.CloseTime, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CloseTime, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-4 col-md-10">
                            <input id="save" type="submit" value="確定修改" class="btn btn-default" />
                        </div>
                    </div>
                </div>
                <div class="col-md-6 col-md-offset-3" style="font-weight:800; color:@TempData["classColor"];">@TempData["Message"]</div><br />

            }
            </div>
        <div class="box-footer">

        </div>
        </div>
 </section>

        @section scripts
{
            @Scripts.Render("~/bundles/datetimepicker")
            @Scripts.Render("~/ bundles / jqueryval")
            <script>

                $(document).ready(function () {

                    $('#CloseTime, #StartTime').datetimepicker({
                        format: 'HH:mm'
                    });

                    $('#save').on('click', function () {
                        var startTime = document.getElementById('StartTime').value.split(':');
                        var closeTime = document.getElementById('CloseTime').value.split(':');

                        var _sTime = new Date('2000', '1', '1', startTime[0], startTime[1]);
                        var _cTime = new Date('2000', '1', '1', closeTime[0], closeTime[1]);
                        if (_sTime > _cTime) {
                            alert("'營業時間' 需小於 '結束時間'!");
                            return false;
                        }
                    });
                });

            </script>
        }

